---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: baremetalservers.vultr.vultr.upbound.io
spec:
  group: vultr.vultr.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vultr
    kind: BareMetalServer
    listKind: BareMetalServerList
    plural: baremetalservers
    singular: baremetalserver
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BareMetalServer is the Schema for the BareMetalServers API. Provides
          a Vultr bare metal server resource. This can be used to create, read, modify,
          and delete bare metal servers on your Vultr account.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BareMetalServerSpec defines the desired state of BareMetalServer
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  activationEmail:
                    description: Whether an activation email will be sent when the
                      server is ready.
                    type: boolean
                  appId:
                    description: The ID of the Vultr application to be installed on
                      the server. See List Applications
                    type: number
                  enableIpv6:
                    description: Whether the server has IPv6 networking activated.
                    type: boolean
                  hostname:
                    description: The hostname to assign to the server.
                    type: string
                  imageId:
                    description: 'The ID of the Vultr marketplace application to be
                      installed on the server. See List Applications Note marketplace
                      applications are denoted by type: marketplace and you must use
                      the image_id not the id.'
                    type: string
                  label:
                    description: A label for the server.
                    type: string
                  osId:
                    description: The ID of the operating system to be installed on
                      the server. See List OS
                    type: number
                  plan:
                    description: The ID of the plan that you want the server to subscribe
                      to. See List Plans
                    type: string
                  region:
                    description: The ID of the region that the server is to be created
                      in. See List Regions
                    type: string
                  reservedIpv4:
                    description: The ID of the floating IP to use as the main IP of
                      this server. See Reserved IPs
                    type: string
                  scriptId:
                    description: The ID of the startup script you want added to the
                      server.
                    type: string
                  snapshotId:
                    description: The ID of the Vultr snapshot that the server will
                      restore for the initial installation. See List Snapshots
                    type: string
                  sshKeyIds:
                    description: A list of SSH key IDs to apply to the server on install
                      (only valid for Linux/FreeBSD).
                    items:
                      type: string
                    type: array
                  tags:
                    description: A list of tags to apply to the servier.
                    items:
                      type: string
                    type: array
                  userData:
                    description: Generic data store, which some provisioning tools
                      and cloud operating systems use as a configuration file. It
                      is generally consumed only once after an instance has been launched,
                      but individual needs may vary.
                    type: string
                  vpc2Ids:
                    description: A list of VPC 2.0 IDs to be attached to the server.
                    items:
                      type: string
                    type: array
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: plan is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.plan)
            - message: region is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.region)
          status:
            description: BareMetalServerStatus defines the observed state of BareMetalServer.
            properties:
              atProvider:
                properties:
                  activationEmail:
                    description: Whether an activation email will be sent when the
                      server is ready.
                    type: boolean
                  appId:
                    description: The ID of the Vultr application to be installed on
                      the server. See List Applications
                    type: number
                  cpuCount:
                    description: The number of CPUs available on the server.
                    type: number
                  dateCreated:
                    description: The date the server was added to your Vultr account.
                    type: string
                  disk:
                    description: The description of the disk(s) on the server.
                    type: string
                  enableIpv6:
                    description: Whether the server has IPv6 networking activated.
                    type: boolean
                  gatewayV4:
                    description: The server's IPv4 gateway.
                    type: string
                  hostname:
                    description: The hostname to assign to the server.
                    type: string
                  id:
                    description: ID of the server.
                    type: string
                  imageId:
                    description: 'The ID of the Vultr marketplace application to be
                      installed on the server. See List Applications Note marketplace
                      applications are denoted by type: marketplace and you must use
                      the image_id not the id.'
                    type: string
                  label:
                    description: A label for the server.
                    type: string
                  macAddress:
                    description: The MAC address associated with the server.
                    type: number
                  mainIp:
                    description: The server's main IP address.
                    type: string
                  netmaskV4:
                    description: The server's IPv4 netmask.
                    type: string
                  os:
                    description: The string description of the operating system installed
                      on the server.
                    type: string
                  osId:
                    description: The ID of the operating system to be installed on
                      the server. See List OS
                    type: number
                  plan:
                    description: The ID of the plan that you want the server to subscribe
                      to. See List Plans
                    type: string
                  ram:
                    description: The amount of memory available on the server in MB.
                    type: string
                  region:
                    description: The ID of the region that the server is to be created
                      in. See List Regions
                    type: string
                  reservedIpv4:
                    description: The ID of the floating IP to use as the main IP of
                      this server. See Reserved IPs
                    type: string
                  scriptId:
                    description: The ID of the startup script you want added to the
                      server.
                    type: string
                  snapshotId:
                    description: The ID of the Vultr snapshot that the server will
                      restore for the initial installation. See List Snapshots
                    type: string
                  sshKeyIds:
                    description: A list of SSH key IDs to apply to the server on install
                      (only valid for Linux/FreeBSD).
                    items:
                      type: string
                    type: array
                  status:
                    description: The status of the server's subscription.
                    type: string
                  tags:
                    description: A list of tags to apply to the servier.
                    items:
                      type: string
                    type: array
                  userData:
                    description: Generic data store, which some provisioning tools
                      and cloud operating systems use as a configuration file. It
                      is generally consumed only once after an instance has been launched,
                      but individual needs may vary.
                    type: string
                  v6MainIp:
                    description: The main IPv6 network address.
                    type: string
                  v6Network:
                    description: The IPv6 subnet.
                    type: string
                  v6NetworkSize:
                    description: The IPv6 network size in bits.
                    type: number
                  vpc2Ids:
                    description: A list of VPC 2.0 IDs to be attached to the server.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
